{"version":3,"sources":["layouts/PrzypomnienieHasÅ‚a.js","layouts/Logowanie.js","layouts/Rejestracja.js","layouts/App.js","index.js"],"names":["Reset","state","email","message","errors","messages","email_incorrect","handleChangeLogin","e","name","target","type","value","_this","setState","Object","defineProperty","handleSubmitPassword","preventDefault","validation","formValidation","correct","mailReg","RegExp","this","match","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","response","ok","Error","json","data","alert","catch","err","react_default","a","createElement","className","onSubmit","noValidate","htmlFor","id","onChange","React","Component","Logowanie","pass","logOn","password_incorrect","handleSubmit","password","_this2","length","pswd","name_surname","concat","Fragment","react_router_dom","to","react_router","path","component","Rejestracja","username","username_incorrect","handleChange","indexOf","App","ReactDOM","render","layouts_App","document","getElementById"],"mappings":"8RAkKeA,6MA3JXC,MAAQ,CACJC,MAAO,GACPC,QAAS,GAETC,OAAQ,CACNF,OAAO,MAKXG,SAAW,CAETC,gBAAiB,qBAKnBC,kBAAoB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAOH,EAAEE,OAAOC,KACtB,GAAa,SAATA,GAA6B,UAATA,EAAkB,CACxC,IAAMC,EAAQJ,EAAEE,OAAOE,MAEvBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGN,EAAOG,QAKdK,qBAAuB,SAACT,GACtBA,EAAEU,iBAEF,IAAMC,EAAaN,EAAKO,iBAGpBD,EAAWE,QACbR,EAAKC,SAAS,CAEZZ,MAAO,GAIPE,OAAQ,CAENF,OAAO,KAMXW,EAAKC,SAAS,CACZV,OAAQ,CAENF,OAAQiB,EAAWjB,0FAWzB,IAAIA,GAAQ,EAGRmB,GAAU,EACRC,EAAU,IAAIC,OAAO,mDA0C3B,OAvCIC,KAAKvB,MAAMC,MAAMuB,MAAMH,KACzBpB,GAAQ,GAONA,IACFmB,GAAU,EACVK,MAAM,gCAAiC,CACrCC,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB/B,MAAQsB,KAAKvB,MAAMC,UAGpBgC,KAAK,SAAAC,GACN,GAAGA,EAASC,GAEZ,OAAOD,EAGG,MAAME,MAAO,gCAKtBH,KAAK,SAAAC,GAAQ,OAAIA,EAASG,SAC1BJ,KAAK,SAAAK,GAEJC,MAAK,2EAENC,MAAM,SAAAC,GAAG,OAAIF,MAAM,iFAGhB,CACNnB,UACAnB,0CASV,OAEIyC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,SACAH,EAAAC,EAAAC,cAAA,QAAME,SAAUvB,KAAKP,qBAAsB+B,YAAU,GAEnDL,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,SACAN,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,QAAQuC,GAAG,QAAQzC,KAAK,QAAQG,MAAOY,KAAKvB,MAAMC,MAAOiD,SAAU3B,KAAKjB,oBAAsBiB,KAAKvB,MAAMG,OAAOF,OAASyC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAStB,KAAKnB,SAASC,iBAAwBqC,EAAAC,EAAAC,cAAA,YAKpMF,EAAAC,EAAAC,cAAA,6CAzIcO,IAAMC,WC2OXC,6MArOXrD,MAAQ,CACJC,MAAO,GACPqD,KAAM,GACNpD,QAAS,GAETC,OAAQ,CACNF,OAAO,EACPqD,MAAM,GAIRC,MAAM,CACJtD,MAAO,GACPgD,GAAG,GACHzC,KAAK,OAMTJ,SAAW,CAETC,gBAAiB,kBACjBmD,mBAAoB,2CAItBlD,kBAAoB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAOH,EAAEE,OAAOC,KACtB,GAAa,SAATA,GAA4B,aAATA,GAAgC,UAATA,EAAkB,CAC9D,IAAMC,EAAQJ,EAAEE,OAAOE,MAEvBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGN,EAAOG,QAKd8C,aAAe,SAAClD,GACdA,EAAEU,iBAEF,IAAMC,EAAaN,EAAKO,iBAGpBD,EAAWE,QACbR,EAAKC,SAAS,CAEZZ,MAAO,GACPqD,KAAM,GAGNnD,OAAQ,CAENF,OAAO,EACPqD,MAAM,KAaV1C,EAAKC,SAAS,CACZV,OAAQ,CAENF,OAAQiB,EAAWjB,MACnBqD,MAAOpC,EAAWwC,6FAsCT,IAAAC,EAAApC,KAIXtB,GAAQ,EACRyD,GAAW,EAEXtC,GAAU,EACRC,EAAU,IAAIC,OAAO,mDAoD3B,OAjDIC,KAAKvB,MAAMC,MAAMuB,MAAMH,KACzBpB,GAAQ,GAGNsB,KAAKvB,MAAMsD,KAAKM,OAAS,IAC3BF,GAAW,GAKTzD,GAASyD,IACXtC,GAAU,EAEVK,MAAM,8BAA+B,CACnCC,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB/B,MAAQsB,KAAKvB,MAAMC,MACnB4D,KAAOtC,KAAKvB,MAAMsD,SAEnBrB,KAAK,SAAAC,GACN,GAAGA,EAASC,GAEZ,OAAOD,EAGG,MAAME,MAAO,gCAKtBH,KAAK,SAAAC,GAAQ,OAAIA,EAASG,SAC1BJ,KAAK,SAAAK,GACJqB,EAAK9C,SAAS,CACZ0C,MAAM,CACFtD,MAAOqC,EAAKrC,MACZgD,GAAGX,EAAKW,GACRzC,KAAK8B,EAAKwB,gBAIhBvB,MAAK,mBAAAwB,OAAoBJ,EAAK3D,MAAMuD,MAAM/C,SAE3CgC,MAAM,SAAAC,GAAG,OAAIF,MAAM,6CAGhB,CACNnB,UACAnB,QACAyD,6CAQV,OACEhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KAEEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,aACAH,EAAAC,EAAAC,cAAA,QAAME,SAAUvB,KAAKkC,aAAcV,YAAU,GAE3CL,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,SACAN,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,QAAQuC,GAAG,QAAQzC,KAAK,QAAQG,MAAOY,KAAKvB,MAAMC,MAAOiD,SAAU3B,KAAKjB,oBAAsBiB,KAAKvB,MAAMG,OAAOF,OAASyC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAStB,KAAKnB,SAASC,iBAAwBqC,EAAAC,EAAAC,cAAA,YAIpMF,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,YAAf,cACAN,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,WAAWuC,GAAG,WAAWzC,KAAK,OAAOG,MAAOY,KAAKvB,MAAMsD,KAAMJ,SAAU3B,KAAKjB,oBAAsBiB,KAAKvB,MAAMG,OAAOmD,MAAQZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAStB,KAAKnB,SAASoD,oBAA2Bd,EAAAC,EAAAC,cAAA,YAK1MF,EAAAC,EAAAC,cAAA,0BAGFF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMC,GAAG,UAAT,qCAMFxB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACEvB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWtE,aArNZoD,IAAMC,WCqLfkB,6MArLXtE,MAAQ,CACJuE,SAAU,GACVtE,MAAO,GACPqD,KAAM,GAENpD,QAAS,GAETC,OAAQ,CACNoE,UAAU,EACVtE,OAAO,EACPqD,MAAM,MAKVlD,SAAW,CACToE,mBAAoB,yBACpBnE,gBAAiB,kBACjBmD,mBAAoB,2CAItBiB,aAAe,SAAClE,GACd,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAOH,EAAEE,OAAOC,KACtB,GAAa,SAATA,GAA4B,aAATA,GAAgC,UAATA,EAAkB,CAC9D,IAAMC,EAAQJ,EAAEE,OAAOE,MAEvBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGN,EAAOG,QAKd8C,aAAe,SAAClD,GACdA,EAAEU,iBAEF,IAAMC,EAAaN,EAAKO,iBAGpBD,EAAWE,QACbR,EAAKC,SAAS,CACZ0D,SAAU,GACVtE,MAAO,GACPqD,KAAM,GAENpD,QAAS,qCAETC,OAAQ,CACNoE,UAAU,EACVtE,OAAO,EACPqD,MAAM,KAKV1C,EAAKC,SAAS,CACZV,OAAQ,CACNoE,UAAWrD,EAAWqD,SACtBtE,OAAQiB,EAAWjB,MACnBqD,MAAOpC,EAAWwC,6FAUxB,IAAIa,GAAW,EACXtE,GAAQ,EACRyD,GAAW,EAEXtC,GAAU,EACRC,EAAU,IAAIC,OAAO,mDAkD3B,OAhDIC,KAAKvB,MAAMuE,SAASX,OAAS,IAA2C,IAAtCrC,KAAKvB,MAAMuE,SAASG,QAAQ,OAChEH,GAAW,GAGThD,KAAKvB,MAAMC,MAAMuB,MAAMH,KACzBpB,GAAQ,GAGNsB,KAAKvB,MAAMsD,KAAKM,OAAS,IAC3BF,GAAW,GAKTa,GAAYtE,GAASyD,IACvBtC,GAAU,EACVK,MAAM,+BAAgC,CACpCC,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB8B,aAAevC,KAAKvB,MAAMuE,SAC1BtE,MAAQsB,KAAKvB,MAAMC,MACnB4D,KAAQtC,KAAKvB,MAAMsD,SAIpBrB,KAAK,SAAAC,GACN,GAAGA,EAASC,GAEZ,OAAOD,EAGG,MAAME,MAAO,gCAKtBH,KAAK,SAAAC,GAAQ,OAAIA,EAASG,SAC1BJ,KAAK,SAAAK,GAEJC,MAAK,6CAENC,MAAM,SAAAC,GAAG,OAAIF,MAAM,wDAGhB,CACNnB,UACAmD,WACAtE,QACAyD,6CAQV,OAEIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,eACAH,EAAAC,EAAAC,cAAA,QAAME,SAAUvB,KAAKkC,aAAcV,YAAU,GAC3CL,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,QAAON,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,UACtBH,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,OAAOuC,GAAG,OAAOzC,KAAK,WAAWG,MAAOY,KAAKvB,MAAMuE,SAAUrB,SAAU3B,KAAKkD,eAAiBlD,KAAKvB,MAAMG,OAAOoE,UAAY7B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAStB,KAAKnB,SAASoE,oBAD9K,IAC0M9B,EAAAC,EAAAC,cAAA,YAI1MF,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAQN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,UACvBH,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,QAAQuC,GAAG,QAAQzC,KAAK,QAAQG,MAAOY,KAAKvB,MAAMC,MAAOiD,SAAU3B,KAAKkD,eAAiBlD,KAAKvB,MAAMG,OAAOF,OAASyC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAStB,KAAKnB,SAASC,iBAAwBqC,EAAAC,EAAAC,cAAA,YAI/LF,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,YAAWN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,eAC1BH,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,WAAWuC,GAAG,WAAWzC,KAAK,OAAOG,MAAOY,KAAKvB,MAAMsD,KAAMJ,SAAU3B,KAAKkD,eAAiBlD,KAAKvB,MAAMG,OAAOmD,MAAQZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAStB,KAAKnB,SAASoD,oBAA2Bd,EAAAC,EAAAC,cAAA,YAKrMF,EAAAC,EAAAC,cAAA,sCAhKoBO,IAAMC,WCkDjBuB,mLAtCT,OAEEjC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACRtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACUvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEbH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMC,GAAG,UAAWxB,EAAAC,EAAAC,cAAA,yBACpBF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMC,GAAG,aAAYxB,EAAAC,EAAAC,cAAA,2BAErBF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWhB,IAChCX,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWC,IACnC5B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWtE,eAnBxBoD,IAAMC,WCF1BwB,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAAaC,SAASC,eAAe","file":"static/js/main.83057837.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink, BrowserRouter as Router,Link, Route, Switch} from 'react-router-dom'\r\n\r\nclass Reset extends React.Component {\r\n\r\n\r\n    \r\n    state = {\r\n        email: '',        \r\n        message: '',\r\n    \r\n        errors: {\r\n          email: false,          \r\n          \r\n        }\r\n      }\r\n\r\n      messages = {\r\n        \r\n        email_incorrect: 'Brak @ w emailu',\r\n        \r\n        \r\n      }\r\n    \r\n      handleChangeLogin = (e) => { \r\n        const name = e.target.name;\r\n        const type = e.target.type;\r\n        if (type === \"text\"  || type === \"email\") {\r\n          const value = e.target.value;\r\n          // const checked = e.target.checked;\r\n          this.setState({\r\n            [name]: value\r\n          })\r\n        } \r\n      }\r\n    \r\n      handleSubmitPassword = (e) => {\r\n        e.preventDefault()\r\n    \r\n        const validation = this.formValidation()\r\n        // console.log(validation)\r\n    \r\n        if (validation.correct) {\r\n          this.setState({\r\n            \r\n            email: '',\r\n           \r\n           \r\n    \r\n            errors: {\r\n              \r\n              email: false,\r\n              \r\n             \r\n            }\r\n          })\r\n        } else {\r\n          this.setState({\r\n            errors: {\r\n              \r\n              email: !validation.email,\r\n              \r\n              \r\n            }\r\n          })\r\n        }\r\n      }\r\n    \r\n      formValidation() {\r\n     \r\n        \r\n        let email = false;\r\n        \r\n        \r\n        let correct = false;\r\n        const mailReg = new RegExp(/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/);\r\n      \r\n    \r\n        if (this.state.email.match(mailReg) ) {\r\n          email = true;\r\n        }\r\n    \r\n     \r\n    \r\n      \r\n    \r\n        if (email) {\r\n          correct = true\r\n          fetch('http://locahost:3000/remember', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              \"email\":this.state.email,\r\n              \r\n              })\r\n          }).then(response=>{\r\n            if(response.ok){           \r\n            \r\n            return response}\r\n                      \r\n\r\n                      throw Error ('BÅ‚edne dane logowania')\r\n                    }\r\n            \r\n            \r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              \r\n              alert(`HasÅ‚o zostaÅ‚o zrestartowane i przesÅ‚ane osobnym mailem`)\r\n            })\r\n            .catch(err => alert(\"Nie udaÅ‚o siÄ™ ZrestartowaÄ‡ hasÅ‚a -> SprawdÅº email\"))\r\n        }\r\n    \r\n        return ({\r\n          correct,         \r\n          email,\r\n        \r\n         \r\n        })\r\n      }\r\n    \r\n     \r\n\r\n    render (){\r\nreturn(\r\n    \r\n    <div className=\"formularz\">\r\n    <span className='titleform'>Reset</span>\r\n    <form onSubmit={this.handleSubmitPassword} noValidate>\r\n      \r\n      <label htmlFor=\"email\">Email:\r\n      <input type=\"email\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChangeLogin} />{this.state.errors.email && <span className='error'>{this.messages.email_incorrect}</span>}<br/>\r\n        \r\n      </label>      \r\n     \r\n      \r\n      <button>Resetuj HasÅ‚o</button>\r\n    </form>\r\n    \r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Reset","import React from 'react';\r\nimport {NavLink, BrowserRouter as Router,Link, Route, Switch} from 'react-router-dom'\r\nimport App from './App'\r\nimport Reset from './PrzypomnienieHasÅ‚a'\r\n\r\nclass Logowanie extends React.Component {\r\n\r\n\r\n    \r\n    state = {\r\n        email: '',\r\n        pass: '',\r\n        message: '',\r\n    \r\n        errors: {\r\n          email: false,\r\n          pass: false,\r\n          \r\n        },\r\n\r\n        logOn:{\r\n          email: '',\r\n          id:'',\r\n          name:'',\r\n\r\n        }\r\n\r\n      }\r\n\r\n      messages = {\r\n        \r\n        email_incorrect: 'Brak @ w emailu',\r\n        password_incorrect: 'HasÅ‚o musi mieÄ‡ 5 znakÃ³w',\r\n        \r\n      }\r\n    \r\n      handleChangeLogin = (e) => { // do zrobienia !!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        const name = e.target.name;\r\n        const type = e.target.type;\r\n        if (type === \"text\" || type === \"password\" || type === \"email\") {\r\n          const value = e.target.value;\r\n          // const checked = e.target.checked;\r\n          this.setState({\r\n            [name]: value\r\n          })\r\n        } \r\n      }\r\n    \r\n      handleSubmit = (e) => {\r\n        e.preventDefault()\r\n    \r\n        const validation = this.formValidation()\r\n        // console.log(validation)\r\n    \r\n        if (validation.correct) {\r\n          this.setState({\r\n            \r\n            email: '',\r\n            pass: '',\r\n           \r\n    \r\n            errors: {\r\n              \r\n              email: false,\r\n              pass: false,\r\n             \r\n            }\r\n          })\r\n\r\n       \r\n\r\n\r\n\r\n\r\n\r\n          \r\n        } else {\r\n          this.setState({\r\n            errors: {\r\n              \r\n              email: !validation.email,\r\n              pass: !validation.password,\r\n              \r\n            }\r\n          })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n//         fetch('http://localhost:8085/login', {\r\n//   method: 'POST',\r\n//   headers: {\r\n//     'Accept': 'application/json',\r\n//     'Content-Type': 'application/json'\r\n//   },\r\n//   body: JSON.stringify({\r\n//     \"email\":this.state.email,\r\n//     \"pswd\":this.state.pass\r\n//     })\r\n// }).then(response=>{return response})\r\n//   .then(response => response.json())\r\n//   .then(data => {\r\n//     this.setState({\r\n//       logOn:{\r\n//           email: data.email,\r\n//           id:data.id,\r\n//           name:data.name_surname,\r\n\r\n//       }\r\n//     })\r\n//     alert(`Zalogowany jako ${this.state.logOn.name}`)\r\n//   })\r\n\r\n}\r\n  \r\n      \r\n    \r\n      formValidation() {\r\n        // true - ok\r\n        // false - zle\r\n        \r\n        let email = false;\r\n        let password = false;\r\n        \r\n        let correct = false;\r\n        const mailReg = new RegExp(/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/);\r\n      \r\n    \r\n        if (this.state.email.match(mailReg) ) {\r\n          email = true;\r\n        }\r\n    \r\n        if (this.state.pass.length > 5) {\r\n          password = true;\r\n        }\r\n    \r\n      \r\n    \r\n        if (email && password) {\r\n          correct = true\r\n\r\n          fetch('http://localhost:3000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              \"email\":this.state.email,\r\n              \"pswd\":this.state.pass\r\n              })\r\n          }).then(response=>{\r\n            if(response.ok){           \r\n            \r\n            return response}\r\n                      \r\n\r\n                      throw Error ('BÅ‚edne dane logowania')\r\n                    }\r\n            \r\n            \r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              this.setState({\r\n                logOn:{\r\n                    email: data.email,\r\n                    id:data.id,\r\n                    name:data.name_surname,\r\n          \r\n                }\r\n              })\r\n              alert(`Zalogowany jako ${this.state.logOn.name}`)\r\n            })\r\n            .catch(err => alert(\"Nie udaÅ‚o siÄ™ zalogowaÄ‡\"))\r\n        }\r\n    \r\n        return ({\r\n          correct,         \r\n          email,\r\n          password,\r\n         \r\n        })\r\n      }\r\n    \r\n     \r\n\r\n    render (){\r\nreturn(\r\n  <>\r\n  \r\n    <div className=\"formularz\">\r\n    <span className='titleform'>Logowanie</span>\r\n    <form onSubmit={this.handleSubmit} noValidate>\r\n      \r\n      <label htmlFor=\"email\">Email:\r\n      <input type=\"email\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChangeLogin} />{this.state.errors.email && <span className='error'>{this.messages.email_incorrect}</span>}<br/>\r\n        \r\n      </label>\r\n\r\n      <label htmlFor=\"password\">HasÅ‚o:\r\n      <input type=\"password\" id=\"password\" name=\"pass\" value={this.state.pass} onChange={this.handleChangeLogin} />{this.state.errors.pass && <span className='error'>{this.messages.password_incorrect}</span>}<br/>\r\n        \r\n      </label>\r\n     \r\n      \r\n      <button>Zaloguj</button>\r\n      \r\n    </form>\r\n    <Link to='/reset'>Nie pamiÄ™tasz hasÅ‚a ? </Link>\r\n    \r\n    \r\n    \r\n    \r\n  </div>\r\n  <Router>   \r\n    <Route path='/reset' component={Reset}/>\r\n  </Router>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</>\r\n\r\n)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Logowanie","import React from 'react';\r\nimport {NavLink, BrowserRouter as Router,Link, Route, Switch} from 'react-router-dom'\r\n\r\nclass Rejestracja extends React.Component {\r\n\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        pass: '',\r\n        \r\n        message: '',\r\n    \r\n        errors: {\r\n          username: false,\r\n          email: false,\r\n          pass: false,\r\n          \r\n        }\r\n      }\r\n\r\n      messages = {\r\n        username_incorrect: 'Conajmniej 5 znakÃ³w',\r\n        email_incorrect: 'Brak @ w emailu',\r\n        password_incorrect: 'HasÅ‚o musi mieÄ‡ 5 znakÃ³w',\r\n        \r\n      }\r\n    \r\n      handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const type = e.target.type;\r\n        if (type === \"text\" || type === \"password\" || type === \"email\") {\r\n          const value = e.target.value;\r\n          // const checked = e.target.checked;\r\n          this.setState({\r\n            [name]: value\r\n          })\r\n        } \r\n      }\r\n    \r\n      handleSubmit = (e) => {\r\n        e.preventDefault()\r\n    \r\n        const validation = this.formValidation()\r\n        // console.log(validation)\r\n    \r\n        if (validation.correct) {\r\n          this.setState({\r\n            username: '',\r\n            email: '',\r\n            pass: '',\r\n            \r\n            message: 'Formularz zostaÅ‚ wysÅ‚any',\r\n    \r\n            errors: {\r\n              username: false,\r\n              email: false,\r\n              pass: false,\r\n              \r\n            }\r\n          })\r\n        } else {\r\n          this.setState({\r\n            errors: {\r\n              username: !validation.username,\r\n              email: !validation.email,\r\n              pass: !validation.password,\r\n              \r\n            }\r\n          })\r\n        }\r\n      }\r\n    \r\n      formValidation() {\r\n        // true - ok\r\n        // false - zle\r\n        let username = false;\r\n        let email = false;\r\n        let password = false;\r\n        \r\n        let correct = false;\r\n        const mailReg = new RegExp(/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/);\r\n        \r\n        if (this.state.username.length > 5 && this.state.username.indexOf(' ') === -1) {\r\n          username = true;\r\n        }\r\n    \r\n        if (this.state.email.match(mailReg) ) {\r\n          email = true;\r\n        }\r\n    \r\n        if (this.state.pass.length > 5) {\r\n          password = true;\r\n        }\r\n    \r\n      \r\n    \r\n        if (username && email && password ) {\r\n          correct = true\r\n          fetch('http://localhost:3000/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              \"name_surname\":this.state.username ,\r\n              \"email\":this.state.email, \r\n              \"pswd\": this.state.pass\r\n              \r\n              \r\n              })\r\n          }).then(response=>{\r\n            if(response.ok){           \r\n            \r\n            return response}\r\n                      \r\n\r\n                      throw Error ('BÅ‚edne dane logowania')\r\n                    }\r\n            \r\n            \r\n            )\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              \r\n              alert(`DziÄ™kujÄ™ za rejestracjÄ™ `)\r\n            })\r\n            .catch(err => alert(\"Nie udaÅ‚o siÄ™ ZZarejestrowaÄ‡ konta\"))\r\n        }\r\n    \r\n        return ({\r\n          correct,\r\n          username,\r\n          email,\r\n          password,\r\n          \r\n        })\r\n      }\r\n    \r\n     \r\n\r\n    render (){\r\nreturn(\r\n    \r\n    <div className=\"formularz\">\r\n    <span className='titleform'>Rejestracja</span>\r\n    <form onSubmit={this.handleSubmit} noValidate>\r\n      <label htmlFor=\"user\"><span className='info'>Login:</span>\r\n      <input type=\"text\" id=\"user\" name=\"username\" value={this.state.username} onChange={this.handleChange} />{this.state.errors.username && <span className='error'>{this.messages.username_incorrect}</span>} <br/>\r\n        \r\n      </label>\r\n\r\n      <label htmlFor=\"email\"><span className='info'>Email:</span>\r\n      <input type=\"email\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />{this.state.errors.email && <span className='error'>{this.messages.email_incorrect}</span>}<br/>\r\n        \r\n      </label>\r\n\r\n      <label htmlFor=\"password\"><span className='info'>HasÅ‚o:</span>\r\n      <input type=\"password\" id=\"password\" name=\"pass\" value={this.state.pass} onChange={this.handleChange} />{this.state.errors.pass && <span className='error'>{this.messages.password_incorrect}</span>}<br/>\r\n        \r\n      </label>\r\n     \r\n      \r\n      <button>Zarejestruj</button>\r\n    </form>\r\n    \r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Rejestracja","import React from 'react';\nimport '../styles/App.css';\nimport {NavLink, BrowserRouter as Router,Link, Route, Switch} from 'react-router-dom'\nimport Logowanie from './Logowanie'\nimport Rejestracja from './Rejestracja'\nimport Reset from './PrzypomnienieHasÅ‚a'\n\n\n  class App extends React.Component{   \n\n\n    \n   \n    render(){     \n   \n      return(\n        \n        <>\n<Router>\n          <nav className='enter'>\n            \n            <Link to='/login'  ><div>Logowanie</div></Link>\n            <Link to='/registry'><div>Rejestracja</div></Link>\n            \n            <main>\n            <Route path='/login' component={Logowanie}/>\n            <Route path='/registry' component={Rejestracja}/>\n            <Route path='/reset' component={Reset}/>\n            </main>\n          </nav>\n\n          </Router>\n\n        </>\n            \n\n      )\n\n    } \n  \n  \n  }\n\n\n\n\n\n\n\n\n\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Weather from './layouts/App';\n\n\nReactDOM.render(<Weather />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}